C51 COMPILER V9.02   OLED                                                                  09/24/2018 20:43:12 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.OBJ
COMPILER INVOKED BY: F:\keil\C51\BIN\C51.EXE oled.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"    
   3          #include "delay.h"
   4          /****************************************************************************** 
   5          OLED的显存
   6          存放格式如下.
   7          [0]0 1 2 3 ... 127      
   8          [1]0 1 2 3 ... 127      
   9          [2]0 1 2 3 ... 127      
  10          [3]0 1 2 3 ... 127      
  11          [4]0 1 2 3 ... 127      
  12          [5]0 1 2 3 ... 127      
  13          [6]0 1 2 3 ... 127      
  14          [7]0 1 2 3 ... 127                      
  15          ******************************************************************************/                    
  16          #if OLED_MODE==1
              /****************************************************************************** 
              向SSD1106写入一个字节。
              dat:要写入的数据/命令
              cmd:数据/命令标志 0,表示命令;1,表示数据;                        
              ******************************************************************************/
              
              
              void OLED_WR_Byte(u8 dat,u8 cmd)
              {
                      DATAOUT(dat);       
                      if(cmd)
                        OLED_DC_Set();
                      else 
                        OLED_DC_Clr();                   
                      OLED_CS_Clr();
                      OLED_WR_Clr();   
                      OLED_WR_Set();
                      OLED_CS_Set();    
                      OLED_DC_Set();   
              }                   
              #else
  38          
  39          /****************************************************************************** 
  40          向SSD1306写入一个字节。
  41          dat:要写入的数据/命令
  42          cmd:数据/命令标志 0,表示命令;1,表示数据;                        
  43          ******************************************************************************/
  44          
  45          void OLED_WR_Byte(u8 dat,u8 cmd)
  46          {       
  47   1              u8 i;                     
  48   1              if(cmd)
  49   1                OLED_DC_Set();
  50   1              else 
  51   1                OLED_DC_Clr();
  52   1                                
  53   1              OLED_CS_Clr();
  54   1              for(i=0;i<8;i++)
  55   1              {                         
C51 COMPILER V9.02   OLED                                                                  09/24/2018 20:43:12 PAGE 2   

  56   2                      OLED_SCLK_Clr();
  57   2                      if(dat&0x80)
  58   2                              {
  59   3                         OLED_SDIN_Set();
  60   3                              }
  61   2              else
  62   2                         OLED_SDIN_Clr();
  63   2                  OLED_SCLK_Set();
  64   2                      dat<<=1;   
  65   2              }                                                 
  66   1              OLED_CS_Set();
  67   1              OLED_DC_Set();            
  68   1      } 
  69          #endif
  70          /****************************************************************************** 
  71          设置显示位置                    
  72          ******************************************************************************/
  73          void OLED_Set_Pos(unsigned char x, unsigned char y) 
  74          { 
  75   1              OLED_WR_Byte(0xb0+y,OLED_CMD);
  76   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
  77   1              OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
  78   1      }         
  79           
  80          /****************************************************************************** 
  81          开启OLED显示                    
  82          ******************************************************************************/  
  83          /*
  84          void OLED_Display_On(void)
  85          {
  86                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  87                  OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
  88                  OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
  89          }
  90           */
  91          /****************************************************************************** 
  92          关闭OLED显示                    
  93          ******************************************************************************/    
  94          /*
  95          void OLED_Display_Off(void)
  96          {
  97                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  98                  OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
  99                  OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 100          }                                        
 101          */
 102                  
 103          /****************************************************************************** 
 104          清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!                        
 105          ******************************************************************************/  
 106          void OLED_Clear(void)  
 107          {  
 108   1              u8 i,n;             
 109   1              for(i=0;i<8;i++)  
 110   1              {  
 111   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 112   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 113   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 114   2                      for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 115   2              } //更新显示
 116   1      }
 117          
C51 COMPILER V9.02   OLED                                                                  09/24/2018 20:43:12 PAGE 3   

 118          
 119          
 120          /****************************************************************************** 
 121          在指定位置显示一个字符,包括部分字符
 122          x:0~127
 123          y:0~63
 124          mode:0,反白显示;1,正常显示                               
 125          size:选择字体 16/12                     
 126          ******************************************************************************/
 127          void OLED_ShowChar(u8 x,u8 y,u8 chr)
 128          {       
 129   1              unsigned char c=0,i=0;  
 130   1                      c=chr-' ';//得到偏移后的值                      
 131   1                      if(x>Max_Column-1){x=0;y=y+2;}
 132   1                      if(SIZE ==16)
 133   1                              {
 134   2                              OLED_Set_Pos(x,y);      
 135   2                              for(i=0;i<8;i++)
 136   2                              OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 137   2                              OLED_Set_Pos(x,y+1);
 138   2                              for(i=0;i<8;i++)
 139   2                              OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 140   2                              }
 141   1                              else 
 142   1                              {       
 143   2                                      OLED_Set_Pos(x,y+1);
 144   2                                      for(i=0;i<6;i++)
 145   2                                      OLED_WR_Byte(F6x8[c][i],OLED_DATA);     
 146   2                              }
 147   1      }
 148          
 149          /****************************************************************************** 
 150          m^n函数                 
 151          ******************************************************************************/
 152          u32 oled_pow(u8 m,u8 n)
 153          {
 154   1              u32 result=1;    
 155   1              while(n--)result*=m;    
 156   1              return result;
 157   1      }                                 
 158                  
 159          /****************************************************************************** 
 160          显示2个数字
 161          x,y :起点坐标    
 162          len :数字的位数
 163          size:字体大小
 164          num:数值(0~4294967295);                 
 165          ******************************************************************************/                   
 166          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 167          {               
 168   1              u8 t,temp;
 169   1              u8 enshow=0;                                               
 170   1              for(t=0;t<len;t++)
 171   1              {
 172   2                      temp=(num/oled_pow(10,len-t-1))%10;
 173   2                      if(enshow==0&&t<(len-1))
 174   2                      {
 175   3                              if(temp==0)
 176   3                              {
 177   4                                      OLED_ShowChar(x+(size2/2)*t,y,' ');
 178   4                                      continue;
 179   4                              }
C51 COMPILER V9.02   OLED                                                                  09/24/2018 20:43:12 PAGE 4   

 180   3                              else enshow=1;   
 181   3                      }
 182   2                      OLED_ShowChar(x+(size2/2)*t,y,temp+'0'); 
 183   2              }
 184   1      } 
 185          
 186          /****************************************************************************** 
 187          显示一个字符号串                        
 188          ******************************************************************************/
 189          void OLED_ShowString(u8 x,u8 y,u8 *chr)
 190          {
 191   1              unsigned char j=0;
 192   1              while (chr[j]!='\0')
 193   1              {       
 194   2                  OLED_ShowChar(x,y,chr[j]);
 195   2                      x+=8;
 196   2                      if(x>120){x=0;y+=2;}
 197   2                      j++;
 198   2              }
 199   1      }
 200          
 201          /****************************************************************************** 
 202          显示汉字                        
 203          ******************************************************************************/
 204          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 205          {                           
 206   1              u8 t,adder=0;
 207   1              OLED_Set_Pos(x,y);      
 208   1          for(t=0;t<16;t++)
 209   1                      {
 210   2                                      OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 211   2                                      adder+=1;
 212   2           }  
 213   1                      OLED_Set_Pos(x,y+1);    
 214   1          for(t=0;t<16;t++)
 215   1                              {       
 216   2                                      OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 217   2                                      adder+=1;
 218   2            }                                 
 219   1      }
 220          /****************************************************************************** 
 221          功能描述：显示显示BMP图片128×64起始点坐标(x,y)
 222                    x的范围0～127
 223                            y为页的范围0～7
 224          ******************************************************************************/
 225          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 226          {       
 227   1       unsigned int j=0;
 228   1       unsigned char x,y;
 229   1        
 230   1        if(y1%8==0) y=y1/8;      
 231   1        else y=y1/8+1;
 232   1              for(y=y0;y<y1;y++)
 233   1              {
 234   2                      OLED_Set_Pos(x0,y);
 235   2              for(x=x0;x<x1;x++)
 236   2                  {      
 237   3                      OLED_WR_Byte(BMP[j++],OLED_DATA);               
 238   3                  }
 239   2              }
 240   1      } 
C51 COMPILER V9.02   OLED                                                                  09/24/2018 20:43:12 PAGE 5   

 241          /****************************************************************************** 
 242          初始化SSD1306                           
 243          ******************************************************************************/                             
 244          void OLED_Init(void)
 245          {
 246   1       
 247   1          OLED_RST_Set();
 248   1              delay_ms(100);
 249   1              OLED_RST_Clr();
 250   1              delay_ms(100);
 251   1              OLED_RST_Set(); 
 252   1      
 253   1              OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 254   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 255   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 256   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 257   1              OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 258   1              OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 259   1              OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 260   1              OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 261   1              OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 262   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 263   1              OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 264   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset       Shift Mapping RAM Counter (0x00~0x3F)
 265   1              OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 266   1              OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 267   1              OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 268   1              OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 269   1              OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 270   1              OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 271   1              OLED_WR_Byte(0x12,OLED_CMD);
 272   1              OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 273   1              OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 274   1              OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 275   1              OLED_WR_Byte(0x02,OLED_CMD);//
 276   1              OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 277   1              OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 278   1              OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 279   1              OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 280   1              OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 281   1              
 282   1              OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 283   1              OLED_Clear();
 284   1              OLED_Set_Pos(0,0);      
 285   1      }
 286          /****************************************************************************** 
 287          功能描述：显示数字
 288                    x的范围0～127
 289                            y为页的范围0～7
 290          ******************************************************************************/
 291          void display_num(char x,char y,int parame)
 292          {
 293   1      
 294   1         int a;//整数
 295   1         float b;//小数
 296   1         float parame1;
 297   1        //uint xiao;
 298   1        //uint zheng;
 299   1        uint wan=0;
 300   1        uint qian=0;
 301   1        uint bai=0;
 302   1        uint shi=0;
C51 COMPILER V9.02   OLED                                                                  09/24/2018 20:43:12 PAGE 6   

 303   1        uint ge=0;
 304   1        uint ling=0;
 305   1        uint lingling=0;
 306   1       char the_num[6]={0};
 307   1      
 308   1        if(parame==0)//此条件屏蔽可显示刷新频率很高参数的 最后状态 即（参数死态）
 309   1        {
 310   2         the_num[0]=0+0x30;
 311   2         the_num[1]=' ';
 312   2         the_num[2]=' ';
 313   2         the_num[3]=' ';
 314   2         the_num[4]=' ';
 315   2         the_num[5]='\0';
 316   2         //LCD_Print(x,y,&the_num[0]);
 317   2         OLED_ShowString(x,y,&the_num[0]);
 318   2        }
 319   1        
 320   1        if(parame<0)//负数
 321   1        { 
 322   2          parame1=0-parame;   
 323   2          the_num[0]='-';
 324   2          if(parame1>999&&parame1<10000)
 325   2          {
 326   3                qian =parame1/1000;
 327   3                bai=(parame1-qian*1000)/100;
 328   3                shi =(parame1-qian*1000-bai*100)/10;
 329   3                ge =parame1-qian*1000-bai*100-shi*10;
 330   3                the_num[0]='-';
 331   3                the_num[1]=qian+0x30;
 332   3                the_num[2]=bai+0x30;
 333   3                the_num[3]=shi+0x30;
 334   3                the_num[4]=ge+0x30;
 335   3                the_num[5]='\0';
 336   3                OLED_ShowString(x,y,&the_num[0]);
 337   3           }
 338   2        if(parame1>99&&parame1<1000)
 339   2          {
 340   3                bai =parame1/100;
 341   3                shi=(parame1-bai*100)/10;
 342   3                ge =(parame1-bai*100-shi*10)/1;
 343   3                the_num[0]='-';
 344   3                the_num[1]=bai+0x30;
 345   3                the_num[2]=shi+0x30;
 346   3                the_num[3]=ge+0x30;       
 347   3                the_num[4]=' ';
 348   3                the_num[5]='\0';          
 349   3                OLED_ShowString(x,y,&the_num[0]);
 350   3           }
 351   2        if(parame1>9&&parame1<100)
 352   2          {
 353   3                shi =parame1/10;
 354   3                ge=(parame1-shi*10)/1;
 355   3                the_num[0]='-';
 356   3                the_num[1]=shi+0x30;
 357   3                the_num[2]=ge+0x30;
 358   3                the_num[3]=' ';
 359   3                the_num[4]=' ';
 360   3                the_num[5]='\0'; 
 361   3                OLED_ShowString(x,y,&the_num[0]);
 362   3           }
 363   2        if(parame1>=1&&parame1<10)
 364   2          {
C51 COMPILER V9.02   OLED                                                                  09/24/2018 20:43:12 PAGE 7   

 365   3                ge =parame1/1;
 366   3                the_num[0]='-';
 367   3                the_num[1]=ge+0x30;
 368   3                the_num[2]=' ';
 369   3                the_num[3]=' ';
 370   3                the_num[4]=' ';
 371   3                the_num[5]='\0'; 
 372   3                OLED_ShowString(x,y,&the_num[0]);
 373   3           }
 374   2        }
 375   1        if(parame>=0)
 376   1        {
 377   2          a=parame/1;
 378   2          b=parame-a;
 379   2           
 380   2        }  
 381   1        if(b==0)//整数
 382   1        {
 383   2             if(parame>9999)
 384   2             {
 385   3                wan =parame/10000;
 386   3                qian=(parame-wan*10000)/1000;
 387   3                bai =(parame-wan*10000-qian*1000)/100;
 388   3                shi =(parame-wan*10000-qian*1000-bai*100)/10;
 389   3                ge  =parame-wan*10000-qian*1000-bai*100-shi*10;
 390   3                the_num[0]=wan+0x30;
 391   3                the_num[1]=qian+0x30;
 392   3                the_num[2]=bai+0x30;
 393   3                the_num[3]=shi+0x30;
 394   3                the_num[4]=ge+0x30;
 395   3                the_num[5]='\0';
 396   3                OLED_ShowString(x,y,&the_num[0]);
 397   3             }
 398   2             if(parame>999&&parame<10000)
 399   2             {
 400   3                qian=parame/1000;
 401   3                bai=(parame-qian*1000)/100;
 402   3                shi=(parame-qian*1000-bai*100)/10;
 403   3                ge=parame-qian*1000-bai*100-shi*10;
 404   3                the_num[0]=qian+0x30;
 405   3                the_num[1]=bai+0x30;
 406   3                the_num[2]=shi+0x30;
 407   3                the_num[3]=ge+0x30;
 408   3                the_num[4]=' ';
 409   3                the_num[5]='\0';           
 410   3                OLED_ShowString(x,y,&the_num[0]);
 411   3             }
 412   2            if(parame>99&&parame<1000)//3位
 413   2            {
 414   3                bai=parame/100;
 415   3                shi=(parame-bai*100)/10;
 416   3                ge=(parame-bai*100-shi*10)/1;
 417   3                the_num[0]=bai+0x30;
 418   3                the_num[1]=shi+0x30;
 419   3                the_num[2]=ge+0x30;
 420   3                the_num[3]=' ';
 421   3                the_num[4]=' ';
 422   3                the_num[5]='\0';           
 423   3                OLED_ShowString(x,y,&the_num[0]);
 424   3             }
 425   2             if(parame>9&&parame<100)
 426   2             {
C51 COMPILER V9.02   OLED                                                                  09/24/2018 20:43:12 PAGE 8   

 427   3                shi =parame/10;
 428   3                ge=(parame-shi*10)/1;
 429   3                the_num[0]=shi+0x30;
 430   3                the_num[1]=ge+0x30;
 431   3                the_num[2]=' ';
 432   3                the_num[3]=' ';
 433   3                the_num[4]=' ';
 434   3                the_num[5]='\0';          
 435   3                OLED_ShowString(x,y,&the_num[0]);
 436   3             }
 437   2        if(parame>=1&&parame<10)
 438   2          {
 439   3                ge =parame/1;
 440   3                the_num[0]=ge+0x30;
 441   3                the_num[1]=' ';
 442   3                the_num[2]=' ';
 443   3                the_num[3]=' ';
 444   3                the_num[4]=' ';
 445   3                the_num[5]='\0';           
 446   3                OLED_ShowString(x,y,&the_num[0]);
 447   3           }
 448   2        }
 449   1       /*
 450   1        if(b>0)//小数
 451   1        {   
 452   1             parame=parame+0.001;
 453   1             zheng = parame/1;
 454   1             xiao  = (parame-zheng)*100;
 455   1             
 456   1             if(zheng>9&&zheng<100)
 457   1             {
 458   1                shi=zheng/10;
 459   1                ge=(zheng-shi*10);
 460   1                if(xiao>9&&xiao<100)
 461   1                {
 462   1                  ling=xiao/10;
 463   1                  lingling=(xiao-ling*10);           
 464   1                }
 465   1                if(xiao>0&&xiao<10)
 466   1                {
 467   1                  ling=0;
 468   1                  lingling=xiao/1;          
 469   1                } 
 470   1                the_num[0]=shi+0x30;
 471   1                the_num[1]=ge+0x30;
 472   1                the_num[2]='.';
 473   1                the_num[3]=ling+0x30;
 474   1                the_num[4]=lingling+0x30;
 475   1                the_num[5]='\0';
 476   1                OLED_ShowString(x,y,&the_num[0]);
 477   1             }
 478   1             
 479   1             
 480   1             if(zheng>0&&zheng<10)
 481   1             {
 482   1                ge=zheng;
 483   1                if(xiao>9&&xiao<100)
 484   1                {
 485   1                  ling=xiao/10;
 486   1                  lingling=(int)(xiao-ling*10);           
 487   1                }                                                                     
 488   1                if(xiao>0&&xiao<10)
C51 COMPILER V9.02   OLED                                                                  09/24/2018 20:43:12 PAGE 9   

 489   1                {
 490   1                  ling=0;
 491   1                  lingling=(int)xiao;          
 492   1                } 
 493   1                the_num[0]=ge+0x30;
 494   1                the_num[1]='.';
 495   1                the_num[2]=ling+0x30;
 496   1                the_num[3]=lingling+0x30;
 497   1                the_num[4]=' ';
 498   1                the_num[5]='\0';          
 499   1                OLED_ShowString(x,y,&the_num[0]);
 500   1             }        
 501   1             if(zheng<1)
 502   1             {
 503   1                ge=0;
 504   1                if(xiao>9&&xiao<100)
 505   1                {
 506   1                  ling=xiao/10;
 507   1                  lingling=(xiao-ling*10);           
 508   1                }
 509   1                if(xiao>1&&xiao<10)                   
 510   1                {
 511   1                  ling=0;
 512   1                  lingling=xiao/1;          
 513   1                } 
 514   1                the_num[0]=ge+0x30;
 515   1                the_num[1]='.';
 516   1                the_num[2]=ling+0x30;
 517   1                the_num[3]=lingling+0x30;
 518   1                the_num[4]=' ';
 519   1                the_num[5]='\0';          
 520   1                OLED_ShowString(x,y,&the_num[0]);
 521   1             }        
 522   1        }              */
 523   1      }
 524          /******************************************************/  
 525          
 526          
 527          
 528          
 529          
 530          
 531          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2389    ----
   CONSTANT SIZE    =   3678    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      59
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
